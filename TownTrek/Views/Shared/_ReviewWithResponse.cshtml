@model TownTrek.Models.ViewModels.ReviewWithResponseViewModel

<div class="review-item">
    <div class="review-header">
        <div class="reviewer-info">
            <strong>@Model.Review.User.UserName</strong>
            <div class="review-rating">
                @for (int i = 1; i <= 5; i++)
                {
                    @if (i <= Model.Review.Rating)
                    {
                        <svg class="star filled" width="14" height="14" fill="currentColor" viewBox="0 0 23 23">
                            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                    }
                    else
                    {
                        <svg class="star" width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 23 23">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                    }
                }
            </div>
        </div>
        <span class="review-date">@Model.Review.CreatedAt.ToString("MMM d, yyyy")</span>
    </div>
    @if (!string.IsNullOrEmpty(Model.Review.Comment))
    {
        <p class="review-comment">@Model.Review.Comment</p>
    }
    
    @* Business Owner Response *@
    @if (Model.Response != null)
    {
        <div class="review-response">
            <div class="response-header">
                <div class="owner-badge">
                    <span class="owner-initials">@(Model.Response.User.UserName?.Substring(0, Math.Min(2, Model.Response.User.UserName?.Length ?? 1)).ToUpper() ?? "OW")</span>
                    <span class="owner-label">Owner</span>
                </div>
                <span class="response-date">@Model.Response.CreatedAt.ToString("MMM d, yyyy")</span>
            </div>
            <p class="response-text">@Model.Response.Response</p>
        </div>
    }
    else if (Model.CanUserRespond)
    {
        <div class="response-form-container" style="display: none;" data-review-id="@Model.Review.Id">
            <div class="response-form">
                <textarea class="response-textarea" placeholder="Respond to this review..." maxlength="1000" rows="3"></textarea>
                <div class="response-actions">
                    <button type="button" class="btn btn-secondary cancel-response">Cancel</button>
                    <button type="button" class="btn btn-primary submit-response" data-review-id="@Model.Review.Id">Post Response</button>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-secondary btn-sm respond-to-review" data-review-id="@Model.Review.Id">
            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"/>
            </svg>
            Respond
        </button>
    }
</div>