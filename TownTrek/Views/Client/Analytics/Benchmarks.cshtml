@model TownTrek.Models.ViewModels.CategoryBenchmarks
@{
    ViewData["Title"] = "Category Benchmarks";
    Layout = "_ClientLayout";
}

<div class="analytics-page">
    <!-- Header -->
    <div class="page-header">
        <div class="header-content">
            <nav class="breadcrumb">
                <a asp-controller="Analytics" asp-action="Index">Analytics</a>
                <span class="breadcrumb-separator">/</span>
                <span class="breadcrumb-current">Category Benchmarks</span>
            </nav>
            <h1 class="page-title">Category Benchmarks</h1>
            <p class="page-subtitle">Compare your performance against @Model.Category category averages</p>
        </div>
    </div>

    <div class="benchmarks-content">
        <!-- Performance Overview -->
        <div class="benchmark-overview">
            <div class="overview-card">
                <h3>Overall Performance</h3>
                <div class="performance-indicator @Model.YourPerformanceVsAverage.ToLower()">
                    <span class="performance-status">@Model.YourPerformanceVsAverage.ToUpper()</span>
                    <span class="performance-description">vs. category average</span>
                </div>
            </div>
        </div>

        <!-- Detailed Benchmarks -->
        <div class="benchmarks-grid">
            <div class="benchmark-card">
                <div class="benchmark-header">
                    <h4>Views Performance</h4>
                </div>
                <div class="benchmark-metrics">
                    <div class="metric-comparison">
                        <div class="your-metric">
                            <span class="metric-label">Your Average</span>
                            <span class="metric-value">@Model.YourAverageViews.ToString("N0")</span>
                        </div>
                        <div class="category-metric">
                            <span class="metric-label">Category Average</span>
                            <span class="metric-value">@Model.CategoryAverageViews.ToString("N0")</span>
                        </div>
                    </div>
                    <div class="performance-bar">
                        @{
                            var viewsPerformance = Model.CategoryAverageViews > 0 ? 
                                (double)Model.YourAverageViews / Model.CategoryAverageViews * 100 : 100;
                            viewsPerformance = Math.Min(viewsPerformance, 200); // Cap at 200%
                        }
                        <div class="performance-fill" style="width: @(viewsPerformance)%"></div>
                    </div>
                </div>
            </div>

            <div class="benchmark-card">
                <div class="benchmark-header">
                    <h4>Reviews Performance</h4>
                </div>
                <div class="benchmark-metrics">
                    <div class="metric-comparison">
                        <div class="your-metric">
                            <span class="metric-label">Your Average</span>
                            <span class="metric-value">@Model.YourAverageReviews.ToString("N0")</span>
                        </div>
                        <div class="category-metric">
                            <span class="metric-label">Category Average</span>
                            <span class="metric-value">@Model.CategoryAverageReviews.ToString("N0")</span>
                        </div>
                    </div>
                    <div class="performance-bar">
                        @{
                            var reviewsPerformance = Model.CategoryAverageReviews > 0 ? 
                                (double)Model.YourAverageReviews / Model.CategoryAverageReviews * 100 : 100;
                            reviewsPerformance = Math.Min(reviewsPerformance, 200); // Cap at 200%
                        }
                        <div class="performance-fill" style="width: @(reviewsPerformance)%"></div>
                    </div>
                </div>
            </div>

            <div class="benchmark-card">
                <div class="benchmark-header">
                    <h4>Rating Performance</h4>
                </div>
                <div class="benchmark-metrics">
                    <div class="metric-comparison">
                        <div class="your-metric">
                            <span class="metric-label">Your Average</span>
                            <span class="metric-value">@Model.YourAverageRating.ToString("F1") ⭐</span>
                        </div>
                        <div class="category-metric">
                            <span class="metric-label">Category Average</span>
                            <span class="metric-value">@Model.CategoryAverageRating.ToString("F1") ⭐</span>
                        </div>
                    </div>
                    <div class="performance-bar">
                        @{
                            var ratingPerformance = Model.CategoryAverageRating > 0 ? 
                                Model.YourAverageRating / Model.CategoryAverageRating * 100 : 100;
                            ratingPerformance = Math.Min(ratingPerformance, 200); // Cap at 200%
                        }
                        <div class="performance-fill" style="width: @(ratingPerformance)%"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Insights and Recommendations -->
        @if (Model.Insights.Any())
        {
            <div class="benchmark-insights">
                <h3>Insights & Recommendations</h3>
                <div class="insights-list">
                    @foreach (var insight in Model.Insights)
                    {
                        <div class="insight-item">
                            <div class="insight-icon">
                                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                                </svg>
                            </div>
                            <div class="insight-content">
                                <p>@insight</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Actions -->
        <div class="benchmark-actions">
            <a asp-controller="Analytics" asp-action="Index" class="btn btn-secondary">Back to Analytics</a>
            <a asp-controller="Business" asp-action="ManageBusinesses" class="btn btn-primary">Improve Your Listings</a>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/features/client/analytics-core.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/features/client/analytics-charts.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/features/client/analytics-realtime.css" asp-append-version="true" />
}